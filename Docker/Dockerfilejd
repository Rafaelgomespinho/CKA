*Como fazer*:
Existe uma imagem nova para cada micro serviço, é o mesmo nome, porém a versão tem o sufixo "-base".
Essa imagem NÃO executa, ela contém os binários do dotnet core e os nossos binários, ou seja, tem o mínimo necessário para executar.
O cliente precisa montar seu próprio dockerfile e configurar da forma como preferir. No final ele precisa informar o ENTRYPOINT correto para cada serviço.

*Exemplo de dockerfile*:
FROM 567129696518.dkr.ecr.sa-east-1.amazonaws.com/jdpi/spi-api:1.10.0-base
RUN adduser --disabled-password --gecos "" ajesus -u 1000
RUN chown ajesus:ajesus /app
USER 1000
EXPOSE 80
ENTRYPOINT [ "dotnet", "JD.PI.SPI.Api.dll" ]

Mapeamento dos serviços com as dlls corretas para ativar no ENTRYPOINT:  
 - jdpi/spi-api
   EXPOSE 80
   ENTRYPOINT [ "dotnet", "JD.PI.SPI.Api.dll" ]
   
 - jdpi/spi-worker
   ENTRYPOINT [ "dotnet", "JD.PI.SPI.Worker.dll" ]
   
 - jdpi/spi-pagador-receive-worker
   ENTRYPOINT [ "dotnet", "JD.PI.SPI.Pagador.Receive.Worker.dll" ]
   
 - jdpi/spi-pagador-response-worker
   ENTRYPOINT [ "dotnet", "JD.PI.SPI.Pagador.Response.Worker.dll" ]
   
 - jdpi/spi-pagador-send-worker
   ENTRYPOINT [ "dotnet", "JD.PI.SPI.Pagador.Send.Worker.dll" ]
   
 - jdpi/spi-pagador-sgct-worker
   ENTRYPOINT [ "dotnet", "JD.PI.SPI.Pagador.Sgct.Worker.dll" ]
   
 - jdpi/spi-recebedor-receive-worker
   ENTRYPOINT [ "dotnet", "JD.PI.SPI.Recebedor.Receive.Worker.dll" ]
   
  - jdpi/spi-recebedor-response-worker
   ENTRYPOINT [ "dotnet", "JD.PI.SPI.Recebedor.Response.Worker.dll" ]
   
 - jdpi/spi-recebedor-sgct-worker
   ENTRYPOINT [ "dotnet", "JD.PI.SPI.Recebedor.Sgct.Worker.dll" ]
   
 - jdpi/spi-lancamento-api
   ENTRYPOINT [ "dotnet", "JD.PI.SPI.Lancamento.Api.dll" ]
   
-------------------------------------------------------------------------   
   
 - jdpi/bacen-envio-worker
   ENTRYPOINT [ "dotnet", "JD.PI.Bacen.Send.Worker.dll" ]   
   
 - jdpi/bacen-envio-persister-worker
   ENTRYPOINT [ "dotnet", "JD.PI.Bacen.Send.Persister.Worker.dll" ]

 - jdpi/bacen-recebimento-worker
   ENTRYPOINT [ "dotnet", "JD.PI.Bacen.Receive.Worker.dll" ]

 - jdpi/bacen-roteador-worker
   ENTRYPOINT [ "dotnet", "JD.PI.Bacen.Router.Worker.dll" ]

 - jdpi/bacen-download-worker
   ENTRYPOINT [ "dotnet", "JD.PI.Bacen.Download.Worker.dll" ]   
   
-------------------------------------------------------------------------   

 - jdpi/cabine-api
   EXPOSE 80
   ENTRYPOINT [ "dotnet", "JD.PI.Cabine.Api.dll" ]
   
 - jdpi/cabine-worker
   EXPOSE 80
   ENTRYPOINT [ "dotnet", "JD.PI.SPI.Worker.dll" ]   
   
-------------------------------------------------------------------------

 - jdpi/gestao-participantes-api
   EXPOSE 80
   ENTRYPOINT [ "dotnet", "JD.PI.GestaoParticipante.Api.dll" ]   
   
-------------------------------------------------------------------------

 - jdpi/qrc-api
   EXPOSE 80
   ENTRYPOINT [ "dotnet", "JD.PI.QRCode.Api.dll" ]   

 - jdpi/qrc-token-api
   EXPOSE 80
   ENTRYPOINT [ "dotnet", "JD.PI.QRCode.Token.Api.dll" ]   

   
-------------------------------------------------------------------------

 - jdpi/jdpi-cabine-web

# O frontend é diferente do restante. Baixar a imagem base e seguir conforme abaixo:

FROM 567129696518.dkr.ecr.sa-east-1.amazonaws.com/jdpi/jdpi-cabine-web:1.7.1-base
RUN adduser --disabled-password --gecos "" ajesus -u 1000

# Imagem com nginx
FROM nginx:alpine
VOLUME [ "/var/cache/nginx" ]
COPY --from=compile-prod-app app/dist/spi-cabine-web /usr/share/nginx/html
COPY docker/nginx/default.conf /etc/nginx/conf.d/default.conf

CMD ["/bin/sh",  "-c",  "envsubst < /usr/share/nginx/html/assets/js/env.template.js > /usr/share/nginx/html/assets/js/env.js && exec nginx -g 'daemon off;'"]   

RUN chown ajesus:ajesus /usr/share/nginx/html
USER 1000 

-------------------------------------------------------------------------

- jdpi/chave-gestao-api
   EXPOSE 80
   ENTRYPOINT [ "dotnet", "JD.PI.Chave.Gestao.Api.dll" ]
   
 - jdpi/chave-reivindicacao-api
   EXPOSE 80
   ENTRYPOINT [ "dotnet", "JD.PI.Chave.Reivindicacao.Api.dll" ]   
   
 - jdpi/chave-reivindicacao-modificadas-worker
   ENTRYPOINT [ "dotnet", "JD.PI.Chave.Reivindicacao.Modificadas.Worker.dll" ]   
   
 - jdpi/chave-reivindicacao-pendentes-worker
   ENTRYPOINT [ "dotnet", "JD.PI.Chave.Reivindicacao.Pendentes.Worker.dll" ]      
   
 - jdpi/chave-dict-worker
   ENTRYPOINT [ "dotnet", "JD.PI.Chave.Dict.Worker.dll" ] 
   
-------------------------------------------------------------------------
   
Lembrando que para quem não for modificar nada, pode continuar usando da forma normal.
kubectl delete pod  spi-worker-deploy-7b76d8d5dc-v52q2 -n bex  --force --grace-period=0




